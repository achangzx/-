当我们用现有的可调用的模型进行训练的时候，每次训练完可以只保留模型的状态即可

当我们用我们自己写的模型，在把模型写好之后，要用方法一对我们的模型进行保存，之后在对我们的模型进行训练，之后的训练状态利用方法二保存我们的模型的状态即可



方法一：直接保存模型
保存：import torch
方法：torch.save('模型'，‘保存为文件的文件名’)


调用：from 当时写那个模型的文件 import 模型名
方法：moudle=torch.load('上次保存的文件名')

方法二：把模型训练的状态保存为字典的形式，之后可以加载出自己训练的状态（并不是保存模型）
保存调用：torch.save(模型.state_dict(),'保存的名字')    实际上是保存的模型的训练状态
加载调用：1、加载模型的状态
            from  当时写这个模型的文件 import 模型名
            moudle_state=torch.load('之前保存的名字')
         2、既要加载模型训练的状态又要加载模型的网络结构
            from 当时写这个模型的文件 import 模型名
            首先需要通过方法一加载出模型的原始状态
            原模型=torch.load('原模型的原始状态名')
            原模型.load_state_dict(torch.load('原模型的状态的名字')）
            print(moudle)

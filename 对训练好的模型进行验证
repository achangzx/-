import torch
import torchvision
from PIL import Image
from torch import argmax
from torch.nn import Linear

dog='dog.jpg'
dog_pil=Image.open(dog)
print(dog_pil)
print(torch.__version__)
dog_pil=dog_pil.convert('RGB')             #避免png，jpg可能是四通道的情况，先把她转换成三通道
my_transforms=torchvision.transforms.Compose([torchvision.transforms.Resize((224,224)),torchvision.transforms.ToTensor()])
my_dog=my_transforms(dog_pil)
print(my_dog.shape)
my_dog=torch.reshape(my_dog,(1,3,224,224))              #我们的神经网络VGG16要求输出图片的格式是(n,3,224,224)
print(my_dog.shape)



#载入模型
vgg16=torchvision.models.vgg16(pretrained=False)
vgg16.classifier.add_module('7',Linear(1000,10,))
torch.load('第20轮训练结果的模型参数')
my_dog_test=vgg16.forward(my_dog)
print(argmax(my_dog_test))

my_data=torchvision.datasets.CIFAR10('logs',False,download=True)

